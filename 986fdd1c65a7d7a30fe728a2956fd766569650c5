{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8f9d18_c5a31708",
        "filename": "librobinhood/src/plugins/s3/s3.c",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "question: it shouldn\u0027t be the value and not the key ?",
      "range": {
        "startLine": 128,
        "startChar": 53,
        "endLine": 128,
        "endChar": 64
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6c2570_8fc5b613",
        "filename": "librobinhood/src/plugins/s3/s3.c",
        "patchSetId": 6
      },
      "lineNbr": 176,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "major: you need to check the return value, if it fails, you should skip this object if the skip_error options is set, otherwise return NULL",
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6807f3fb_9df5c1fa",
        "filename": "librobinhood/src/plugins/s3/s3.c",
        "patchSetId": 6
      },
      "lineNbr": 181,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: use `snprintf` and check if it fails.\n`rc \u003d snprintf(full_path, len, \"%s/%s\", current_bucket, current_object);`",
      "range": {
        "startLine": 179,
        "startChar": 4,
        "endLine": 181,
        "endChar": 38
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6977ecb5_fc7953c5",
        "filename": "librobinhood/src/plugins/s3/s3.c",
        "patchSetId": 6
      },
      "lineNbr": 183,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: You can use the macro RBH_SSTACK_PUSH, which checks if it fails, otherwise add a check.",
      "range": {
        "startLine": 183,
        "startChar": 14,
        "endLine": 183,
        "endChar": 29
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17eb382c_2fae08d9",
        "filename": "librobinhood/src/plugins/s3/s3.c",
        "patchSetId": 6
      },
      "lineNbr": 191,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "minor: set also `statx.stx_mtime.tv_sec` to 0",
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea9a657c_e5990b85",
        "filename": "librobinhood/src/plugins/s3/s3.c",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "idem: you can use the macro",
      "range": {
        "startLine": 200,
        "startChar": 18,
        "endLine": 200,
        "endChar": 33
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c04326d5_36525b42",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 164,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: mtime_s",
      "range": {
        "startLine": 164,
        "startChar": 29,
        "endLine": 164,
        "endChar": 32
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "750c3637_98dbbf61",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 165,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: use a better name, maybe mtime_ms",
      "range": {
        "startLine": 165,
        "startChar": 18,
        "endLine": 165,
        "endChar": 20
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b11e16_12aeed6e",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 179,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: you can do `sec.count()` here, you don\u0027t need the timeT variable",
      "range": {
        "startLine": 179,
        "startChar": 33,
        "endLine": 179,
        "endChar": 38
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca89dc95_56f12d56",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 213,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "major: I think this is not freed anywhere.",
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3dc5ae8_d6c4fee2",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "minor: add the return value in the doc",
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea4431ce_dca8878f",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: s3_create_metadata",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 25
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc50117f_aaa588df",
        "filename": "librobinhood/src/plugins/s3/s3_wrapper.h",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-04-02T08:36:15Z",
      "side": 1,
      "message": "sugest: s3_get_user_metadata_entry",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 112,
        "endChar": 20
      },
      "revId": "986fdd1c65a7d7a30fe728a2956fd766569650c5",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}