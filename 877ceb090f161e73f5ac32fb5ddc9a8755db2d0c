{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "44f38f34_67bd0722",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-03-11T13:02:29Z",
      "side": 1,
      "message": "I\u0027m not sure about the use of callbacks from posix and lustre as they don\u0027t use the same iterator structure.",
      "revId": "877ceb090f161e73f5ac32fb5ddc9a8755db2d0c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea6400b2_bbda7536",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 5
      },
      "lineNbr": 291,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-03-11T13:02:29Z",
      "side": 1,
      "message": "defect: as for the branch callback, these functions use the posix_iterator internally.\n\nI think it would be better to at least have wrapper functions for all the callbacks. For example, lustre_backend_get_attribute doesn\u0027t use the backend argument so this works for lustre_mpi as well but is not future proof. Having a function `lustre_get_attribute(const char *attr, void *arg, struct rbh_value_pair *data)` and a wrapper `lustre_mpi_backend_get_attribute` and `lustre_backend_get_attribute` (or better yet `lustre_fts_get_attribute` would be better.",
      "range": {
        "startLine": 290,
        "startChar": 18,
        "endLine": 291,
        "endChar": 43
      },
      "revId": "877ceb090f161e73f5ac32fb5ddc9a8755db2d0c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83a5fbbd_a431bfab",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 5
      },
      "lineNbr": 292,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-03-11T13:02:29Z",
      "side": 1,
      "message": "defect: I don\u0027t think this will work for the mpi iterator. posix_backend_branch returns a `struct posix_branch_backend` that will use the posix iterator that uses FTS to traverse the FS.",
      "range": {
        "startLine": 292,
        "startChar": 14,
        "endLine": 292,
        "endChar": 34
      },
      "revId": "877ceb090f161e73f5ac32fb5ddc9a8755db2d0c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c13dc1_0bcf22b3",
        "filename": "librobinhood/src/backends/posix/posix.c",
        "patchSetId": 5
      },
      "lineNbr": 923,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-03-11T13:02:29Z",
      "side": 1,
      "message": "minor: I don\u0027t think this is necessary in C. For example, malloc returns `void *` but you don\u0027t cast it every time.",
      "range": {
        "startLine": 923,
        "startChar": 17,
        "endLine": 923,
        "endChar": 42
      },
      "revId": "877ceb090f161e73f5ac32fb5ddc9a8755db2d0c",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}