{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "53a0461f_52c413b1",
        "filename": "librobinhood/include/robinhood/backends/lustre_mpi.h.in",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-01T09:29:26Z",
      "side": 1,
      "message": "style: indentation",
      "range": {
        "startLine": 18,
        "startChar": 43,
        "endLine": 20,
        "endChar": 70
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48347e90_8b1f087e",
        "filename": "librobinhood/include/robinhood/backends/lustre_mpi.h.in",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2024-03-04T12:04:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53a0461f_52c413b1",
      "range": {
        "startLine": 18,
        "startChar": 43,
        "endLine": 20,
        "endChar": 70
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6750b5d4_e7f65ee3",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-01T09:29:26Z",
      "side": 1,
      "message": "question: I do not know how it may impact this part of the code, but I checked the next patch, and I wondered if it may be a good idea to bind the URI `rbh:lustre:/mount/point` to the lustre-mpi backend if available, instead of the basic lustre one?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1047141f_e44360db",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2024-03-04T12:04:33Z",
      "side": 1,
      "message": "Why not, but isn\u0027t it better to give the user the option to choose between the two backends?",
      "parentUuid": "6750b5d4_e7f65ee3",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4025bd70_e144937b",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-04T15:46:44Z",
      "side": 1,
      "message": "I donnot think so. If they both do the same thing, but one is faster that the other, why choosing the first one? This is something we may decide in a meeting later, once Guillaume is back.",
      "parentUuid": "1047141f_e44360db",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3dc6ba1_1b5bb168",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-03-11T13:02:29Z",
      "side": 1,
      "message": "I understand that we may want to have the MPI backend be the default for Lustre but MPI is not such a small dependency to have by default. In an ideal world, maybe having lustre-fts and lustre-mpi would be better and a configuration could allow the user to specify a custom backend \"lustre\" that would be an alias to lustre-mpi? I don\u0027t know, this is probably overkill. But my sense is that enforcing MPI as a default dependency might be a pain for the users. Having the option to set it to the default might be a better compromise?",
      "parentUuid": "4025bd70_e144937b",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5dc8401_3f6ab723",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-14T08:52:56Z",
      "side": 1,
      "message": "I donnot want to have MPI as a default dependency, I completely agree that it is not desired. Just saying that if the better one is available, I do not see why I will not use it.",
      "parentUuid": "e3dc6ba1_1b5bb168",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20002ad7_433cc717",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-03-14T09:28:16Z",
      "side": 1,
      "message": "Right, but there is a difference between the packaging environment that may have MPIFileUtils installed where we would say \"oh I have MPI available, let me make rbh:lustre:something use MPI\" and then the actual environment where rbh4 is used that now needs to have MPIFileUtils installed in order to use `rbh-sync rbh:lustre:something`. For example, let say we want to package RBH4 with MPIFileUtils support in ocean, if someone uses the ocean package in their system, then they are stuck with MPIFileUtils when using `rbh-sync rbh:lustre:something`.\n\nThat being said, since the MPIFileUtils backend is part of the core backends of librobinhood, if we package librobinhood compiled with MPIFileUtils enabled, we will have that dependency in our specfile. So one will have to install MPIFileUtils anyway. Unless, we package the backend in a different RPM which might be a better solution? I don\u0027t know...",
      "parentUuid": "a5dc8401_3f6ab723",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00eace27_b27626f9",
        "filename": "librobinhood/include/robinhood/backends/meson.build",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-19T14:33:45Z",
      "side": 1,
      "message": "Having non-core backends (i.e. posix and mongo) as additional RPMs seems legit to me.",
      "parentUuid": "20002ad7_433cc717",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 82,
        "endChar": 66
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0b738ac_22b7db56",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-01T09:29:26Z",
      "side": 1,
      "message": "style: indentation",
      "range": {
        "startLine": 160,
        "startChar": 7,
        "endLine": 160,
        "endChar": 42
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae8d068c_2f9a52a9",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2024-03-04T12:04:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0b738ac_22b7db56",
      "range": {
        "startLine": 160,
        "startChar": 7,
        "endLine": 160,
        "endChar": 42
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d07e415_a4638340",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-01T09:29:26Z",
      "side": 1,
      "message": "question: is it planned to also implement this operation? this is an operation we use a lot when syncing in parallel (each subdirectory can be synced using a branch operation, then syncing the root), but maybe this parallelism grain is not interesting with the MPIFileUtils backend?",
      "range": {
        "startLine": 292,
        "startChar": 14,
        "endLine": 292,
        "endChar": 34
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58286c44_83138d94",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2024-03-04T12:04:33Z",
      "side": 1,
      "message": "Yes, it is planned in a future patch to implement this operation with the Lustre-mpi backend. I don\u0027t know if it\u0027s really interesting. Maybe it\u0027s faster to sync everything directly rather than making branches, that\u0027s something to test.",
      "parentUuid": "5d07e415_a4638340",
      "range": {
        "startLine": 292,
        "startChar": 14,
        "endLine": 292,
        "endChar": 34
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c901bc28_0c168e10",
        "filename": "librobinhood/src/backends/lustre_mpi/lustre_mpi.c",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2024-03-04T15:46:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "58286c44_83138d94",
      "range": {
        "startLine": 292,
        "startChar": 14,
        "endLine": 292,
        "endChar": 34
      },
      "revId": "5521918756ca4b89e118e5f607f0cb31c4505d06",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}