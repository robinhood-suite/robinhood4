{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6227ffab_87d0c2e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "minor: for me userland refers to the non kernel part of the OS (kernel land vs user land). You are talking about remote access to the database by authenticated users.",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d4c878d_dff7009a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6227ffab_87d0c2e2",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6c8bf43_1499999f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "Again, not a fan of userland in this context.",
      "range": {
        "startLine": 11,
        "startChar": 69,
        "endLine": 11,
        "endChar": 76
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "754322b4_98ac0cfb",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6c8bf43_1499999f",
      "range": {
        "startLine": 11,
        "startChar": 69,
        "endLine": 11,
        "endChar": 76
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be91a33b_4e469fba",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "typo: priviledged",
      "range": {
        "startLine": 21,
        "startChar": 22,
        "endLine": 21,
        "endChar": 31
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09cf1582_67d09364",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be91a33b_4e469fba",
      "range": {
        "startLine": 21,
        "startChar": 22,
        "endLine": 21,
        "endChar": 31
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe5e9607_c20b61cc",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 23,
        "startChar": 25,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eb13513_3f749504",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe5e9607_c20b61cc",
      "range": {
        "startLine": 23,
        "startChar": 25,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "528ae2b1_9d42f66c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "major: this is a database configuration issue. You can configure a mongo database to be accessible to a group of users for instance (read only, read/write...). The real issue is that if you give access to the database to all the users, then everybody has access to all the metadata of the filesystem. Which you definitely don\u0027t want to do. But you mentioned this in the next point so you can just remove this one.",
      "range": {
        "startLine": 23,
        "startChar": 63,
        "endLine": 24,
        "endChar": 54
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c94c9f7_0a9ed55f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "528ae2b1_9d42f66c",
      "range": {
        "startLine": 23,
        "startChar": 63,
        "endLine": 24,
        "endChar": 54
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1851e50_b19f02f6",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "Again, this is a database configuration issue. A mongo database can be accessible as readonly to users.",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "854db261_3373cfa8",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e1851e50_b19f02f6",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24d905a4_b30fd2f3",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "major: an extended attribute in the trusted namespace.\n\nAlso, I would argue that rbh-update-retention is actually a policy not a tool per say. So the argument for me is that users shouldn\u0027t have to care about policies unless they want to implement their own. In that sense, why shouldn\u0027t they be able to have their own retention logic? If they want to delete their files in a different maner, they should be able to do so with the tools that we provide. Provided that the retention set by the admins should supersedes whatever logic they implemented. Why rewrite a retention script if they want to use the exact same behavior just with different parameters?",
      "range": {
        "startLine": 44,
        "startChar": 60,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28157743_5f48a8d1",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "That is what I meant by \"requiring elevated access\", figured it was more explicit than saying \"in the trusted namespace\", but alright.\n\nAs it currently stands, `rbh-update`retention` is a binary, it takes an URI in, has flags, does some operation on the backend and update it. It is a tool. That may change in the future, but at the time of writing, it is a tool, not a policy.",
      "parentUuid": "24d905a4_b30fd2f3",
      "range": {
        "startLine": 44,
        "startChar": 60,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0513fe2_1efc7fdf",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "My point is that the only thing preventing users from using this tool is the fact that we use the trusted namespace for the attribute. Which is required if we want to prevent users from tempering with the retention logic. But this logic could be made available to users with another extended attribute.",
      "parentUuid": "28157743_5f48a8d1",
      "range": {
        "startLine": 44,
        "startChar": 60,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5227473b_c144ae5c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "I see, yes it could, but not planned for now",
      "parentUuid": "b0513fe2_1efc7fdf",
      "range": {
        "startLine": 44,
        "startChar": 60,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18a69365_29332444",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "nit: I find moreover a bit weird in this context. I might be wrong but for me this word should be used to add on the previous argument. Here, you are only stating the conclusion of your previous argument. \"Hence\" would be more appropriate I think.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14f8b421_1765591b",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "In the previous paragraph, I\u0027m saying they cannot use the tools, here I\u0027m saying they also have no need to use the tools. So only granting access to the three specified in enough.",
      "parentUuid": "18a69365_29332444",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa2efa38_46435ecb",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "I disagree. If they could use rbh-fsevents that would be even better.",
      "parentUuid": "14f8b421_1765591b",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3263dd3_b650d1a2",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "On their own database yes, but not on the main one. They don\u0027t have to and shouldn\u0027t be able to upsert the main database. They should be able to create and update their own, but that\u0027s not possible ATM",
      "parentUuid": "aa2efa38_46435ecb",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25a97bc1_4e075305",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I find it weird to mention rbh-sync in this context. Why would users need to update the backend? We are either talking about having a per user backend (e.g. the SQLite backend) or an authenticated access to the main database (or a copy of it). Since you talk about database access to users and restricting access to the metadata between users, I assume this document is concerned with the later issue?",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 12
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f37af83_b5bc4335",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "I\u0027m saying more in a general manner, \"users should only be able to use sync, find and report\". Then, I later say that even sync is not needed, and yes I\u0027m concerned with the second issue.",
      "parentUuid": "25a97bc1_4e075305",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 12
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4699fad5_caa6abdf",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "This has nothing to do with robinhood. This is a database configuration issue.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 61,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebb99436_7f8112ad",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4699fad5_caa6abdf",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 61,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4db376_2b70031d",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "You mention Kerberos in the next section but here you talk about wrapping rbh-find calls. You should be more specific. What you want to do is:\n\n1. not let users access their metadata through the mongo backend\n2. use an authenticated protocol to communicated with a server that will have access (idealy a read only access) to the mongo database (or any other backend that we need to protect)",
      "range": {
        "startLine": 72,
        "startChar": 48,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b288f5_b7f152d1",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "I\u0027m sorry I don\u0027t understand the issue. What you state is the same as I",
      "parentUuid": "8d4db376_2b70031d",
      "range": {
        "startLine": 72,
        "startChar": 48,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d666d07f_0797f3bb",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "I don\u0027t understand what you mean by \"wrapping calls to rbh-find\". The solution you propose at the end is not a wrapper. This is a new backend with an HTTP server. For me, a wrapper in this context means:\n\nIf the user wants `rbh-find ... -name test`, I wrap it with `rbh-find ... -uid \u003cuid\u003e -gid \u003cgid\u003e -name test` which is obviously not what you want to do.",
      "parentUuid": "43b288f5_b7f152d1",
      "range": {
        "startLine": 72,
        "startChar": 48,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66e399f7_bc8ecc6c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "I mean that figuratively. In spirit, changing `rbh-find ... -name test` to `rbh-find ... -uid \u003cuid\u003e -gid \u003cgid\u003e -name test` (+- the mode checks) is exactly what we want to do, but with the intermediary server to ensure credentials.",
      "parentUuid": "d666d07f_0797f3bb",
      "range": {
        "startLine": 72,
        "startChar": 48,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f3737a1_1fc3970f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-18T10:28:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "66e399f7_bc8ecc6c",
      "range": {
        "startLine": 72,
        "startChar": 48,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63840527_028f9875",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "Be more specific: \"the intermediate server must check user credentials (e.g. Kerberos ticket) and retrieve the UID/GID associated to it and filter entries based on this UID/GID\"",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 16
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18f20230_066191f7",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done (in the following paragraph)",
      "parentUuid": "63840527_028f9875",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 16
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb3c9bd_ae2ceafc",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "what about the mode",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47722fa4_eeb10c70",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "What about the mode ? Isn\u0027t a file\u0027s mode checked with the UID and GID ?",
      "parentUuid": "ffb3c9bd_ae2ceafc",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a189f44_f53489cd",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "The mode determines what actions are allowed. If a file is 666, anybody can read it. If it is 600 then only the owner can access it, the GID is irrelevant. You must take the mode into consideration.",
      "parentUuid": "47722fa4_eeb10c70",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a46f2fd_8cd40d70",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "Ah you\u0027re right, I forgot about that, done",
      "parentUuid": "3a189f44_f53489cd",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd39800c_046a85f7",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "For more clarity, I think you should reorganize the Security and Information Boundaries sections. You could say something like this:\n\n1. users only need a read access to the database\n2. we need to enforce a filtering based on POSIX rules (UID/GID/mode)\n3. to achieve this we need an intermidiate server that will enforce the filtering\n4. this server will have a read only access to the whole database\n5. users can only send authenticated requests to this server (e.g. using Kerberos)",
      "range": {
        "startLine": 86,
        "startChar": 1,
        "endLine": 86,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e14589ac_92de6236",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done for the most part, I had already changed the paragraphs when you reviewed",
      "parentUuid": "bd39800c_046a85f7",
      "range": {
        "startLine": 86,
        "startChar": 1,
        "endLine": 86,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b791011_af080257",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t see why the GRH should come in the picture. You don\u0027t need the celery (also I don\u0027t like the celery but this is another issue). What you need is a simple REST API to translate `rbh-find rbh:http: ...` to HTTP requests back into backend filters. I also think we should get away from the flask API (and Python) as well.",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 116,
        "endChar": 78
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc75be1_e6a4f1f8",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Considering multiple users may do parallel requests, the server may get saturated, so isn\u0027t something like Celery required ?\n\nI also added the GRH here because it has all the requirements needed, and if we could avoid having to develop a server with authentication and parallel requests, from scratch, that\u0027d be nice.",
      "parentUuid": "6b791011_af080257",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 116,
        "endChar": 78
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f00b1b4a_f4d8816e",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "In the end you are limited by your database. You can have as many workers as you like, if the DB cannot handle it, then this is pointless. Before using such a bloated tool, we should probably do some benchmarks. The GRH relies on the scalability of the underlying system to scale. If the DB doesn\u0027t scale, the GRH will be of no use. I suggest we start with a simple REST API and build from there. Database servers like mongodb are designed to be able to scale and manage multiple concurrent requests.\n\nAnd if I where to implement this, I would probably redo it from scratch anyway. I find the client code to be more complicated than it needs to be and it doesn\u0027t handle a some HTTP features (for instance it doesn\u0027t understand the error code 500).",
      "parentUuid": "0fc75be1_e6a4f1f8",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 116,
        "endChar": 78
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5302582_f09ff55f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "OK I understand your point, and I agree. Kept the GRH for reference, but removed mention of Celery, and indicated we may start from the GRH or from scratch, depending on our needs and timeline.",
      "parentUuid": "f00b1b4a_f4d8816e",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 116,
        "endChar": 78
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53848dc0_d6cb351f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "major: I don\u0027t think you want to support actions. Actions will only be managed by the client.",
      "range": {
        "startLine": 130,
        "startChar": 65,
        "endLine": 130,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdbfa418_a28e94ba",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53848dc0_d6cb351f",
      "range": {
        "startLine": 130,
        "startChar": 65,
        "endLine": 130,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "011cf635_dcf733b7",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t really see the point of the Celery in this. All the rbh commands are synchronous at the moment.",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 74
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8b4357e_c3527b17",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "This is more about parallel handling of the requests than anything, especially since the commands may take a long time",
      "parentUuid": "011cf635_dcf733b7",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 74
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05841244_7628ee7c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "But the database server is able to do this parallelisation. And can do it more efficiently than us. It knows whether to requests can be run in parallel, we don\u0027t. And if you want to limit the number of concurrent requests, you can easily do it with a simple pool of threads on the HTTP server. mongo probably even has async request submission functions that we can leverage to avoid having a thread pool. We can push requests in a queue and the threads pops them. No need to have a fully distributes request handler for such a simple task.",
      "parentUuid": "d8b4357e_c3527b17",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 74
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fba97f3a_49fc5896",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "05841244_7628ee7c",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 74
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf6c1da3_25f74330",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "why?",
      "range": {
        "startLine": 135,
        "startChar": 54,
        "endLine": 135,
        "endChar": 79
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79b71139_fa63bdec",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "I was refering to the status loop that would be built-in the http backend, but best not to mention it indeed",
      "parentUuid": "bf6c1da3_25f74330",
      "range": {
        "startLine": 135,
        "startChar": 54,
        "endLine": 135,
        "endChar": 79
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88827978_c4d6a6b4",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t understand this. You could to something like this:\n\n```\nrbh-find rbh:http -type d -name \"test\"\n\n-\u003e GET /type/d/name/test\n\n# Server\nuid, gid, mode \u003d get_credentials_from_ticket()\nrbh-find -uid \u003cuid\u003e (some filter to support the mode and GID) -and \\( -type d -name \"test\" \\)\n```",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe02a587_4960a9de",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "I don\u0027t understand the issue, what you propose is the second option I propose",
      "parentUuid": "88827978_c4d6a6b4",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "006f260b_9b44aadc",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "The issue is that I don\u0027t understand the paragraph. What does \"tools that are more like options of rbh-find and rbh-report than anything\" mean? And I also don\u0027t understand this \"we cannot implement options the basic tools\".",
      "parentUuid": "fe02a587_4960a9de",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2de1855_c1fbdf26",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "I mean that if we created two other find/report tools, like rbh-user-find and rbh-user-report, we could ensure that those would forcefully add the uid and gid filters (plus mode check). But having two new tools just to add this is not really efficient, especially since they are just the -uid and -gid of rbh-find.\n\nRemoved the part in parenthesis.",
      "parentUuid": "006f260b_9b44aadc",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c8f1ac7_47edfe0b",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-13T08:54:48Z",
      "side": 1,
      "message": "There is one thing that I don\u0027t find clear. Are you suggesting that one option is something like this:\n\n```\n$ cat rbh-user-find\n#!/usr/bin/env bash\n\nrbh-find \u003csome URI\u003e -uid $UID -gid $GID -and \"(\" \"$@\" \")\"\n```\n\nThis is not secure. I ommited the `-perm` for simplicity.",
      "parentUuid": "a2de1855_c1fbdf26",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6be0eb29_d9084644",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-18T10:28:37Z",
      "side": 1,
      "message": "No, I meant two whole new C tools, not bash scripts.\nWhat you written is indeed not secure, but it\u0027s not what I suggested.",
      "parentUuid": "3c8f1ac7_47edfe0b",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebce4917_56ae1acf",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-18T10:34:10Z",
      "side": 1,
      "message": "C or bash doesn\u0027t matter here. I just want to clarify what this proposition actually entails since you are vague in your explanations... Could you clearly state what you mean here by \"Creating a simple overlay of the tools\"?",
      "parentUuid": "6be0eb29_d9084644",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "446db03f_db074f4e",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-18T12:46:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebce4917_56ae1acf",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bb35a00_23fb377c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "You could make this more explicit:\n\nThe http backend on the client command has to convert the rbh_filter to an HTTP request. Then the HTTP serveur has to convert the HTTP request to an rbh_filter.",
      "range": {
        "startLine": 158,
        "startChar": 11,
        "endLine": 159,
        "endChar": 67
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d762a84_baff1c9c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5bb35a00_23fb377c",
      "range": {
        "startLine": 158,
        "startChar": 11,
        "endLine": 159,
        "endChar": 67
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a550d8cb_7318eb72",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t really like this approach. If we have a real REST API, this can be integrated to other web services. Here, we are trying to do the minimal work just for this use case when we can go an extra step and have a real integrated product in the end.",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38015196_a17c9daa",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "What do you mean ? You mean we should do the double conversion to be generic ? I\u0027m fine with that if that\u0027s what you mean",
      "parentUuid": "a550d8cb_7318eb72",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20104210_f68943e1",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T12:14:34Z",
      "side": 1,
      "message": "I mean: do in the http backend `rbh_filter -\u003e GET /type/d/name/test` then on the server `GET /type/d/name/test -\u003e filter_and(filter_type(\"d\"), filter_name(\"test\"))`.",
      "parentUuid": "38015196_a17c9daa",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9869e7a_8434bc5e",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-25T08:15:00Z",
      "side": 1,
      "message": "Here that\u0027s outside of my knowledge, is this generic ?\nWouldn\u0027t `GET /type/d/name/test` and `GET /name/test/type/d` be the exact same, but correspond to two different rules ?\nWouldn\u0027t we have to define a ton of rules for all the combinations ?\nHow would you manage `or` and parentheses ?",
      "parentUuid": "20104210_f68943e1",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f42de82_5fe258af",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-13T08:54:48Z",
      "side": 1,
      "message": "My point is that you should at least give one example of an HTTP request that would be sent. From what I understand, you are suggesting something like this:\n\n```\nPOST /mongo/dbname\nBody:\n\"-type d -name test\"\n```\n\nAnd the server would retrieve the filters in the body and simply append them to a base rbh-find command adding the uid/gid/perm filters. Is this what you have in mind?\n\nI don\u0027t like this approach. I think you should make things clear by giving an example.",
      "parentUuid": "d9869e7a_8434bc5e",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c93aaf51_3d7dd1d4",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-18T10:28:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f42de82_5fe258af",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0166e5b_f4192529",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 166,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t understand this. You suggest in the first sentence that you won\u0027t to a double conversion.",
      "range": {
        "startLine": 165,
        "startChar": 67,
        "endLine": 166,
        "endChar": 7
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0ca5da5_877c3ef7",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 166,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0166e5b_f4192529",
      "range": {
        "startLine": 165,
        "startChar": 67,
        "endLine": 166,
        "endChar": 7
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d34ec720_3f4a5edb",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "again, why have this ugly regular status when we don\u0027t need async requests.",
      "range": {
        "startLine": 178,
        "startChar": 3,
        "endLine": 178,
        "endChar": 48
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45b98bdf_bcddec76",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "We don\u0027t need it if we don\u0027t use Celery I agree, but I\u0027m not sure it\u0027s doable without it, the server may be overloaded with requests quickly",
      "parentUuid": "d34ec720_3f4a5edb",
      "range": {
        "startLine": 178,
        "startChar": 3,
        "endLine": 178,
        "endChar": 48
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "497f936b_0d248d25",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-18T10:28:37Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "45b98bdf_bcddec76",
      "range": {
        "startLine": 178,
        "startChar": 3,
        "endLine": 178,
        "endChar": 48
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00a83bfb_83b6bd96",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 184,
        "startChar": 43,
        "endLine": 184,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "403e8071_8310576b",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00a83bfb_83b6bd96",
      "range": {
        "startLine": 184,
        "startChar": 43,
        "endLine": 184,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6120eeb_66862db6",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "question: this should support hostname:port and maybe have a path in the end (depending on how admins want to configure the HTTP servers. Is that compatible with the URI standard?",
      "range": {
        "startLine": 188,
        "startChar": 22,
        "endLine": 188,
        "endChar": 38
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ce481c6_ddb6b35e",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-02-24T10:27:55Z",
      "side": 1,
      "message": "All of those are supported by the URI standard and the URI conversion done in RBH4 yes",
      "parentUuid": "a6120eeb_66862db6",
      "range": {
        "startLine": 188,
        "startChar": 22,
        "endLine": 188,
        "endChar": 38
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}