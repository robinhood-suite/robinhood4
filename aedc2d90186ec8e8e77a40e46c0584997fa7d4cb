{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6227ffab_87d0c2e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "minor: for me userland refers to the non kernel part of the OS (kernel land vs user land). You are talking about remote access to the database by authenticated users.",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6c8bf43_1499999f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "Again, not a fan of userland in this context.",
      "range": {
        "startLine": 11,
        "startChar": 69,
        "endLine": 11,
        "endChar": 76
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be91a33b_4e469fba",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "typo: priviledged",
      "range": {
        "startLine": 21,
        "startChar": 22,
        "endLine": 21,
        "endChar": 31
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe5e9607_c20b61cc",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 23,
        "startChar": 25,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "528ae2b1_9d42f66c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "major: this is a database configuration issue. You can configure a mongo database to be accessible to a group of users for instance (read only, read/write...). The real issue is that if you give access to the database to all the users, then everybody has access to all the metadata of the filesystem. Which you definitely don\u0027t want to do. But you mentioned this in the next point so you can just remove this one.",
      "range": {
        "startLine": 23,
        "startChar": 63,
        "endLine": 24,
        "endChar": 54
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1851e50_b19f02f6",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "Again, this is a database configuration issue. A mongo database can be accessible as readonly to users.",
      "range": {
        "startLine": 27,
        "startChar": 3,
        "endLine": 27,
        "endChar": 18
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24d905a4_b30fd2f3",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "major: an extended attribute in the trusted namespace.\n\nAlso, I would argue that rbh-update-retention is actually a policy not a tool per say. So the argument for me is that users shouldn\u0027t have to care about policies unless they want to implement their own. In that sense, why shouldn\u0027t they be able to have their own retention logic? If they want to delete their files in a different maner, they should be able to do so with the tools that we provide. Provided that the retention set by the admins should supersedes whatever logic they implemented. Why rewrite a retention script if they want to use the exact same behavior just with different parameters?",
      "range": {
        "startLine": 44,
        "startChar": 60,
        "endLine": 44,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18a69365_29332444",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "nit: I find moreover a bit weird in this context. I might be wrong but for me this word should be used to add on the previous argument. Here, you are only stating the conclusion of your previous argument. \"Hence\" would be more appropriate I think.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25a97bc1_4e075305",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I find it weird to mention rbh-sync in this context. Why would users need to update the backend? We are either talking about having a per user backend (e.g. the SQLite backend) or an authenticated access to the main database (or a copy of it). Since you talk about database access to users and restricting access to the metadata between users, I assume this document is concerned with the later issue?",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 12
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4699fad5_caa6abdf",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "This has nothing to do with robinhood. This is a database configuration issue.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 61,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4db376_2b70031d",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "You mention Kerberos in the next section but here you talk about wrapping rbh-find calls. You should be more specific. What you want to do is:\n\n1. not let users access their metadata through the mongo backend\n2. use an authenticated protocol to communicated with a server that will have access (idealy a read only access) to the mongo database (or any other backend that we need to protect)",
      "range": {
        "startLine": 72,
        "startChar": 48,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63840527_028f9875",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "Be more specific: \"the intermediate server must check user credentials (e.g. Kerberos ticket) and retrieve the UID/GID associated to it and filter entries based on this UID/GID\"",
      "range": {
        "startLine": 76,
        "startChar": 12,
        "endLine": 76,
        "endChar": 16
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb3c9bd_ae2ceafc",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "what about the mode",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 34
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd39800c_046a85f7",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "For more clarity, I think you should reorganize the Security and Information Boundaries sections. You could say something like this:\n\n1. users only need a read access to the database\n2. we need to enforce a filtering based on POSIX rules (UID/GID/mode)\n3. to achieve this we need an intermidiate server that will enforce the filtering\n4. this server will have a read only access to the whole database\n5. users can only send authenticated requests to this server (e.g. using Kerberos)",
      "range": {
        "startLine": 86,
        "startChar": 1,
        "endLine": 86,
        "endChar": 8
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b791011_af080257",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t see why the GRH should come in the picture. You don\u0027t need the celery (also I don\u0027t like the celery but this is another issue). What you need is a simple REST API to translate `rbh-find rbh:http: ...` to HTTP requests back into backend filters. I also think we should get away from the flask API (and Python) as well.",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 116,
        "endChar": 78
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53848dc0_d6cb351f",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "major: I don\u0027t think you want to support actions. Actions will only be managed by the client.",
      "range": {
        "startLine": 130,
        "startChar": 65,
        "endLine": 130,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "011cf635_dcf733b7",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t really see the point of the Celery in this. All the rbh commands are synchronous at the moment.",
      "range": {
        "startLine": 132,
        "startChar": 7,
        "endLine": 132,
        "endChar": 74
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf6c1da3_25f74330",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 135,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "why?",
      "range": {
        "startLine": 135,
        "startChar": 54,
        "endLine": 135,
        "endChar": 79
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88827978_c4d6a6b4",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t understand this. You could to something like this:\n\n```\nrbh-find rbh:http -type d -name \"test\"\n\n-\u003e GET /type/d/name/test\n\n# Server\nuid, gid, mode \u003d get_credentials_from_ticket()\nrbh-find -uid \u003cuid\u003e (some filter to support the mode and GID) -and \\( -type d -name \"test\" \\)\n```",
      "range": {
        "startLine": 151,
        "startChar": 11,
        "endLine": 154,
        "endChar": 24
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bb35a00_23fb377c",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "You could make this more explicit:\n\nThe http backend on the client command has to convert the rbh_filter to an HTTP request. Then the HTTP serveur has to convert the HTTP request to an rbh_filter.",
      "range": {
        "startLine": 158,
        "startChar": 11,
        "endLine": 159,
        "endChar": 67
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a550d8cb_7318eb72",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t really like this approach. If we have a real REST API, this can be integrated to other web services. Here, we are trying to do the minimal work just for this use case when we can go an extra step and have a real integrated product in the end.",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 28
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0166e5b_f4192529",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 166,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "I don\u0027t understand this. You suggest in the first sentence that you won\u0027t to a double conversion.",
      "range": {
        "startLine": 165,
        "startChar": 67,
        "endLine": 166,
        "endChar": 7
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d34ec720_3f4a5edb",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "again, why have this ugly regular status when we don\u0027t need async requests.",
      "range": {
        "startLine": 178,
        "startChar": 3,
        "endLine": 178,
        "endChar": 48
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00a83bfb_83b6bd96",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 184,
        "startChar": 43,
        "endLine": 184,
        "endChar": 70
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6120eeb_66862db6",
        "filename": "designs/userland_robinhood.rst",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-02-24T09:29:06Z",
      "side": 1,
      "message": "question: this should support hostname:port and maybe have a path in the end (depending on how admins want to configure the HTTP servers. Is that compatible with the URI standard?",
      "range": {
        "startLine": 188,
        "startChar": 22,
        "endLine": 188,
        "endChar": 38
      },
      "revId": "aedc2d90186ec8e8e77a40e46c0584997fa7d4cb",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}