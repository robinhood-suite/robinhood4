{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2d8661d1_107e59a3",
        "filename": "librobinhood/include/robinhood/alias.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2024-12-06T09:08:46Z",
      "side": 1,
      "message": "nit: none of these include are neeeded in this file, they\u0027re only needed in the .c",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 20,
        "endChar": 2
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36adfd1d_b2268264",
        "filename": "librobinhood/include/robinhood/alias.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-01-06T14:31:13Z",
      "side": 1,
      "message": "Isn\u0027t it better to do imports in headers than in c when programming?",
      "parentUuid": "2d8661d1_107e59a3",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 20,
        "endChar": 2
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc3e1e4b_2abf1e0b",
        "filename": "librobinhood/include/robinhood/alias.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2025-01-15T08:55:27Z",
      "side": 1,
      "message": "Well, I do not think so.\n\nFor sure, adding unnecessary imports in header files will slow down the compilation. So \"historically\", we do our imports in source files.\n\nThere is some people that said that importing tends to be delicate, that order matters, and having all of that in the header is easier. That\u0027s kind of true. But guarding our headers with the following pragmas avoid those issues:\n\n```c\n#ifndef BLABLA_H\n#define BLABLA_H\n\nxxx\n\n#endif\n```\n\nI will conclude saying this is just a case of developer laziness, as usual..",
      "parentUuid": "36adfd1d_b2268264",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 20,
        "endChar": 2
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5d39ea9_3cc222bd",
        "filename": "librobinhood/include/robinhood/alias.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-02-03T14:57:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc3e1e4b_2abf1e0b",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 20,
        "endChar": 2
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1194f78_0e732c19",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2024-12-06T09:08:46Z",
      "side": 1,
      "message": "major? I\u0027m not sure about this, but if nothing in the config is freed, you could just use the content of `value` (the one retrieved from the config) without duplicating it",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6ec91a0_244926d9",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2025-01-10T14:25:42Z",
      "side": 1,
      "message": "major: I effectively think that yaml_parse_string gives back a const char * pointer directly from the parsed opened config file.\n\nI think you could do simpler without duplicating the value returned by rbh_config_find.?",
      "parentUuid": "b1194f78_0e732c19",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa7301bf_1310228c",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-01-20T09:48:43Z",
      "side": 1,
      "message": "I agree, the rbh_value gave to `rbh_config_find` already contains a rbh_value_map with the value find in the conf. You don\u0027t need to duplicate it as a global variable as you are only using it in `apply_aliases`",
      "parentUuid": "a6ec91a0_244926d9",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aadd9c1a_35e88574",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-02-03T14:57:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa7301bf_1310228c",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d900f74d_266bfa6e",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2024-12-06T09:08:46Z",
      "side": 1,
      "message": "minor: add a check that this is not 0, just after the check on KPR_NOT_FOUND",
      "range": {
        "startLine": 83,
        "startChar": 28,
        "endLine": 83,
        "endChar": 43
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be14cde2_b8e6b7e4",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-01-06T14:31:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d900f74d_266bfa6e",
      "range": {
        "startLine": 83,
        "startChar": 28,
        "endLine": 83,
        "endChar": 43
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b25de12_e0800420",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2024-12-06T09:10:20Z",
      "side": 1,
      "message": "defect: missing \u0027}\u0027",
      "range": {
        "startLine": 119,
        "startChar": 41,
        "endLine": 119,
        "endChar": 42
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ed71b1c_612202be",
        "filename": "librobinhood/src/alias.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-01-06T14:31:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b25de12_e0800420",
      "range": {
        "startLine": 119,
        "startChar": 41,
        "endLine": 119,
        "endChar": 42
      },
      "revId": "22b62bc50a18906f49f2b85180bd4127471fb056",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}