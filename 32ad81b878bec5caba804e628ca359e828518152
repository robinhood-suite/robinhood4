{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e5c1cf1e_00c0ec87",
        "filename": "librobinhood/src/backends/posix/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-02-20T15:08:36Z",
      "side": 1,
      "message": "minor: it seems to me that as soon as you have returned this structure to the caller, you get its content and free it. It would be better to avoid this call to malloc to be more efficient. You can simply create a local variable in this function and return it by copy to the caller. This function would return a `struct fsentry_id_pair` instead of `struct fsentry_id_pair *`.",
      "range": {
        "startLine": 522,
        "startChar": 15,
        "endLine": 522,
        "endChar": 40
      },
      "revId": "32ad81b878bec5caba804e628ca359e828518152",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8ff9ed1_8a35a1be",
        "filename": "librobinhood/src/backends/posix/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2024-02-21T09:03:24Z",
      "side": 1,
      "message": "I agree with you but I need also to return \"NULL\" in case there is an error while creating the fsentry. So I have to return a pointer to my struct fsentry_id_pair.",
      "parentUuid": "e5c1cf1e_00c0ec87",
      "range": {
        "startLine": 522,
        "startChar": 15,
        "endLine": 522,
        "endChar": 40
      },
      "revId": "32ad81b878bec5caba804e628ca359e828518152",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6c52314_a96cfc7e",
        "filename": "librobinhood/src/backends/posix/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2024-02-21T11:10:09Z",
      "side": 1,
      "message": "In this case, you can pass fsentry_id_pair as an out parameter to fsentry_from_any and return a boolean indicating whether the call succeeded or not. If the function returns false, the caller will check errno to see the actual error.",
      "parentUuid": "e8ff9ed1_8a35a1be",
      "range": {
        "startLine": 522,
        "startChar": 15,
        "endLine": 522,
        "endChar": 40
      },
      "revId": "32ad81b878bec5caba804e628ca359e828518152",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e2a7919_935c1552",
        "filename": "librobinhood/src/backends/posix/posix.c",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2024-02-22T09:04:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6c52314_a96cfc7e",
      "range": {
        "startLine": 522,
        "startChar": 15,
        "endLine": 522,
        "endChar": 40
      },
      "revId": "32ad81b878bec5caba804e628ca359e828518152",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}