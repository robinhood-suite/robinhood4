{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5f69eb44_7032ce7d",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-07-31T08:52:13Z",
      "side": 1,
      "message": "style: don\u0027t need to put this on its own line, put it at the end in the line above",
      "range": {
        "startLine": 41,
        "startChar": 12,
        "endLine": 41,
        "endChar": 23
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4ff1aed_36d58aa7",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-07-31T15:02:24Z",
      "side": 1,
      "message": "If I put it on the line above, it will be over 80 characters.",
      "parentUuid": "5f69eb44_7032ce7d",
      "range": {
        "startLine": 41,
        "startChar": 12,
        "endLine": 41,
        "endChar": 23
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57f3c337_49843d38",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2025-08-25T10:59:46Z",
      "side": 1,
      "message": "Well you do have lines over 80 characters in `rbh-policy.py`",
      "parentUuid": "a4ff1aed_36d58aa7",
      "range": {
        "startLine": 41,
        "startChar": 12,
        "endLine": 41,
        "endChar": 23
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01397ea8_20cd6ad0",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-09-04T15:19:36Z",
      "side": 1,
      "message": "True :) I fixed it !",
      "parentUuid": "57f3c337_49843d38",
      "range": {
        "startLine": 41,
        "startChar": 12,
        "endLine": 41,
        "endChar": 23
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc198654_686c3d2d",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-09-19T08:01:01Z",
      "side": 1,
      "message": "For strings, it is accepted it can be over 80 characters, makes it easier to search",
      "parentUuid": "01397ea8_20cd6ad0",
      "range": {
        "startLine": 41,
        "startChar": 12,
        "endLine": 41,
        "endChar": 23
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54967021_34813fbc",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-07-31T08:52:13Z",
      "side": 1,
      "message": "suggest/question: wouldn\u0027t it be better to have a default resolution conflict ? Say if both file and directory exists, we output an error but still import the file ? Or have flags to choose that automatically, like a `--prefer-file` or something like that ? Or, third choice, ask the user directly with a yes/no question, like `dnf install` does",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 64
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82c73eb1_ae2e0172",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-07-31T15:02:24Z",
      "side": 1,
      "message": "The third option is fine, but I\u0027m not a fan of the first two. I prefer to be blocking to force the user to make a choice and avoid getting lost with files that have the same name as folders.",
      "parentUuid": "54967021_34813fbc",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 64
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8701976_abe16680",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2025-09-12T14:15:44Z",
      "side": 1,
      "message": "I\u0027m not fan of the third option also. I think that the RBH policy engine will often be executed without any user ready to answer any question.",
      "parentUuid": "82c73eb1_ae2e0172",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 64
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a2f14b8_6042ddc4",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-09-19T08:01:01Z",
      "side": 1,
      "message": "What do you mean by \"getting lost\" ? They may have the same name but not the same path, so it\u0027s easy to keep track of",
      "parentUuid": "e8701976_abe16680",
      "range": {
        "startLine": 44,
        "startChar": 12,
        "endLine": 44,
        "endChar": 64
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39e93642_bb522e76",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-07-31T08:52:13Z",
      "side": 1,
      "message": "question: why use `exec` here but `exec_module` line 52 ? I\u0027d suggest having a single function to do the import, and call it repeatedly here and line 50/51/52",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f69db420_0e75487e",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-07-31T15:02:24Z",
      "side": 1,
      "message": "Each call to exec_module will load the file into a separate module, whereas with exec I can execute the code in the same module. It\u0027s like concatenating all the .py files into one.\nI still use exec_module when possible because it\u0027s more secure than exec and in line with python convention.",
      "parentUuid": "39e93642_bb522e76",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25e4ed76_49ed6769",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2025-08-25T10:59:46Z",
      "side": 1,
      "message": "Can\u0027t you use `importlib` to import the file as a module?",
      "parentUuid": "f69db420_0e75487e",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2745ac9_75da846f",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-09-04T15:19:36Z",
      "side": 1,
      "message": "Yes, you can use importlib to import each .py file as a module, but if the files have dependencies between them, for example, if b.py uses a function defined in a.py, then importing them separately with importlib doesn\u0027t allow b.py to access that context, because each module is executed in isolation.\n\nTo ensure that all files share the same execution space (as if they were concatenated), you must either execute them in a common context, which exec() allows, or transform the directory into a Python package with explicit imports between files. But this is not what we want.",
      "parentUuid": "25e4ed76_49ed6769",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d2f7d85_42884f76",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2025-09-05T09:40:36Z",
      "side": 1,
      "message": "I donnot see why this is an issue. If `b.py` needs `a.py`, it should import it without us importing `a.py` right?\n\nBut ok, that was a suggestion more than anything else.",
      "parentUuid": "d2745ac9_75da846f",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abd88dd0_dc70cf66",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-09-08T11:37:22Z",
      "side": 1,
      "message": "If b.py needs something from a.py, then yes, in a standard Python package, it should import it.\nBut in our case, we don\u0027t treat these files as independent modules. They\u0027re part of a declarative config space, loaded into a shared namespace.\nThis allows b.py to use definitions from a.py without explicit imports, as long as a.py is executed first.\nThat\u0027s why we use exec(..., config_module.__dict__) instead of importlib",
      "parentUuid": "7d2f7d85_42884f76",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e69093_40aa8d3d",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 1008040
      },
      "writtenOn": "2025-09-12T14:15:44Z",
      "side": 1,
      "message": "Why not using package instead of a module ? It will allow to have many different files, and to load them with the submodule_search_locations paramater of spec_from_file_location ?",
      "parentUuid": "abd88dd0_dc70cf66",
      "range": {
        "startLine": 69,
        "startChar": 16,
        "endLine": 69,
        "endChar": 20
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "851ce51c_82bf112a",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-07-31T08:52:13Z",
      "side": 1,
      "message": "minor: have this check earlier, I\u0027d say it\u0027s the first one to do in this function honestly",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77444361_81e2842b",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-07-31T15:02:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "851ce51c_82bf112a",
      "range": {
        "startLine": 72,
        "startChar": 8,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cbb7139_b8ca06ee",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-07-31T08:52:13Z",
      "side": 1,
      "message": "question: shouldn\u0027t there be other checks that you\u0027re not capturing unneeded key/values, for instance those linked to Python standard classes/files ?",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "070a3f52_709991eb",
        "filename": "rbh-policy/rbhpolicy/config/config_loader.py",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1038163
      },
      "writtenOn": "2025-07-31T15:02:24Z",
      "side": 1,
      "message": "Refocusing what we retrieve is a good thing later, but here we do not retrieve the Python built-ins because we are concentrating on the module that we have just created and therefore the elements of the standard Python are in the global built-in module and therefore not concerned.",
      "parentUuid": "2cbb7139_b8ca06ee",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "a8455ce9a33b0701f766dd0a34c5ba4f5c95aaf1",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}