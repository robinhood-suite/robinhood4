{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "33aec055_a873d8e7",
        "filename": "librobinhood/include/robinhood/mpi_rc.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-21T11:12:07Z",
      "side": 1,
      "message": "question: I\u0027m not sure I understand the issue, how could that happen ?",
      "range": {
        "startLine": 15,
        "startChar": 17,
        "endLine": 15,
        "endChar": 41
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24a70c2d_95616b30",
        "filename": "librobinhood/include/robinhood/mpi_rc.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-21T13:21:23Z",
      "side": 1,
      "message": "`rbh-sync rbh:lustre-mpi:/mnt/lustre rbh:mpi-file:output.mfu`",
      "parentUuid": "33aec055_a873d8e7",
      "range": {
        "startLine": 15,
        "startChar": 17,
        "endLine": 15,
        "endChar": 41
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "849a1157_9d5d15ec",
        "filename": "librobinhood/include/robinhood/mpi_rc.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1019048
      },
      "writtenOn": "2025-03-21T13:52:01Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "24a70c2d_95616b30",
      "range": {
        "startLine": 15,
        "startChar": 17,
        "endLine": 15,
        "endChar": 41
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "977e1414_27b1474d",
        "filename": "librobinhood/src/backends/iter_mpi/iter_mpi.c",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-03-19T11:17:48Z",
      "side": 1,
      "message": "major: It\u0027s the same as `rbh_mpi_dec_ref` for me.",
      "range": {
        "startLine": 357,
        "startChar": 4,
        "endLine": 363,
        "endChar": 5
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9243cd11_f5220d9a",
        "filename": "librobinhood/src/backends/iter_mpi/iter_mpi.c",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-19T11:21:30Z",
      "side": 1,
      "message": "No, rbh_mpi_dec_ref only decreases the reference count and calls mpi_finalize.",
      "parentUuid": "977e1414_27b1474d",
      "range": {
        "startLine": 357,
        "startChar": 4,
        "endLine": 363,
        "endChar": 5
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c374f4e_dee33928",
        "filename": "librobinhood/src/backends/iter_mpi/iter_mpi.c",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-03-19T13:08:54Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9243cd11_f5220d9a",
      "range": {
        "startLine": 357,
        "startChar": 4,
        "endLine": 363,
        "endChar": 5
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c2e86ae_04d23a6e",
        "filename": "librobinhood/src/backends/mfu/utils.c",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-03-19T11:17:48Z",
      "side": 1,
      "message": "style: remove empty line",
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d64c105b_8936da20",
        "filename": "librobinhood/src/backends/mfu/utils.c",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-25T06:39:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c2e86ae_04d23a6e",
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b096411d_4a4a682d",
        "filename": "librobinhood/src/mpi_rc.c",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-03-19T11:17:48Z",
      "side": 1,
      "message": "question: I wonder how it works for multi-process, the lock will block all threads but here we have processes. Also in iter_mpi.c, it is already managed by `MPI_Initialized` and `MPI_Finalized`, I don\u0027t see the use",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 28,
        "endChar": 36
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6434ce43_9a014765",
        "filename": "librobinhood/src/mpi_rc.c",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1019142
      },
      "writtenOn": "2025-03-19T11:21:30Z",
      "side": 1,
      "message": "This use is that we have a global variable that is shared across threads so that only one of them calls MPI_Finalize. This is to prevent multi threading issues if/when we use it. Regarding multiple processes, this is fine because each process must call MPI_Finalize. No bugs here.",
      "parentUuid": "b096411d_4a4a682d",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 28,
        "endChar": 36
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bc8c5f6_0ebe5235",
        "filename": "librobinhood/src/mpi_rc.c",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1037727
      },
      "writtenOn": "2025-03-19T13:08:54Z",
      "side": 1,
      "message": "I didn\u0027t understand since we don\u0027t have threads. I don\u0027t know if there was a need to do it right away.",
      "parentUuid": "6434ce43_9a014765",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 28,
        "endChar": 36
      },
      "revId": "e352f88659500ddaf4475c89317bd2d241f03534",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}