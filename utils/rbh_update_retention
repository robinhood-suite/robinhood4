#!/bin/bash

# This file is part of RobinHood 4
# Copyright (C) 2024 Commissariat a l'energie atomique et aux energies
#                    alternatives
#
# SPDX-License-Identifer: LGPL-3.0-or-later

function update_directory_expiration_date
{
    local URI="$1"
    local directory_ID="$2"
    local expiration_date="$3"

    rbh-fsevents - "$URI" <<EOF
--- !inode_xattr
"id": !!binary $directory_ID
"xattrs":
  "user.ccc_expiration_date": !int64 $expiration_date
...
EOF
}

function check_expiration_date
{
    local URI="$1"
    local directory="$2"
    local directory_ID="$3"
    local expires="$4"
    local expiration_date="$5"
    local mount_point="$6"

    local max_time=$(rbh-find "$URI#$directory" \
                        -printf "%A\n%T\n" | sort -rn | head -n 1)

    echo "Directory '$directory' expiration date is set to '$expiration_date'"
    echo "The last accessed file in it was accessed at '$max_time'"

    local current="$(date +%s)"

    if (( max_time + expires > current )); then
        local new_expiration_date=$((max_time + expires + 1))

        echo "Expiration of the directory should occur '$expires' seconds after it's last usage"
        echo "Changing the expiration date of '$directory' to '$new_expiration_date'"
        update_directory_expiration_date "$URI" "$directory_ID" \
                                         "$new_expiration_date"
    else
        echo "Directory '$directory' has expired"
        if [ ! -z "$mount_point" ]; then
            rm -rf "$mount_point/$directory"
        fi
    fi
}

function run_retention_updater
{
    local URI="$1"
    local mount_point="$2"
    local tmp_file="$(mktemp tmp.XXXXXX)"

    rbh-lfind $URI -type d -expired -printf "%p|%e|%E|%I\n" |
        while IFS='|' read -r dir expires expiration_date ID; do

        if [ "${expires:0:1}" != "+" ]; then
            echo "Directory '$dir' has expired"
            rm -rf "$mount_point/$dir"
            continue
        fi

        check_expiration_date "$URI" "$dir" "$ID" "$expires" \
                              "$expiration_date" "$mount_point"
        echo "true" > $tmp_file
    done

    local found_something="$(cat $tmp_file)"
    if [ -z "$found_something" ]; then
        echo "No directory has expired"
    fi

    rm $tmp_file
}

function print_doc
{
    echo "This script will update the retention of attributes of any directory"
    echo "that is expired, based on their content's last accessed time."
    echo "If a directory is expired, it is printed to the output, unless the"
    echo "'--delete' option is given, in which case it will be removed;"
    echo ""
    echo "Usage: rbh-update-retention URI [--delete <mount point>]"
}

if [ $# -eq 0 ]; then
    echo "Please specify a URI to update"
    exit 1
fi

while :
do
    case "$1" in
        --delete)
            if [ "$delete_found" == "true" ]; then
                echo "Delete option already given"
                exit 1
            fi
            delete_found=true
            shift
            mount_point=$1
            ;;
        --help)
            print_doc
            exit 0
            ;;
        *)
            if [ "$uri_found" == "true" ]; then
                break;
            fi
            uri_found=true
            URI="$1"
            ;;
    esac

    shift
done

run_retention_updater "$URI" "$mount_point"
