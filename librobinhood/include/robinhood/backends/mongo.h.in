/* This file is part of RobinHood 4
 * Copyright (C) 2025 Commissariat a l'energie atomique et aux energies
 *                    alternatives
 *
 * SPDX-License-Identifer: LGPL-3.0-or-later
 */

#ifndef ROBINHOOD_MONGO_BACKEND_H
#define ROBINHOOD_MONGO_BACKEND_H

/* If the mongo backend ever supports more operations than the plugin interface
 * exposes, those operations should be defined here.
 */

#include "robinhood/plugins/backend.h"
#include "robinhood/backend.h"
#include "robinhood/config.h"

#define RBH_MONGO_BACKEND_NAME "mongo"

#mesondefine RBH_MONGO_BACKEND_MAJOR
#mesondefine RBH_MONGO_BACKEND_MINOR
#mesondefine RBH_MONGO_BACKEND_RELEASE
#define RBH_MONGO_BACKEND_VERSION RPV(RBH_MONGO_BACKEND_MAJOR, \
                                      RBH_MONGO_BACKEND_MINOR, \
                                      RBH_MONGO_BACKEND_RELEASE)

/**
 * Create a mongo backend
 *
 * @param self      the mongo plugin
 * @param uri       the URI given to the command
 * @param type      the name used to load the backend (unused)
 * @param fsname    the name of the filesystem the backend refers to
 * @param config    the config to use in the new backend
 *
 * @return          a pointer to a newly allocated mongo backend on success,
 *                  NULL on error and errno is set appropriately
 *
 * @error EINVAL    the backend's configuration is invalid (either a wrong
 *                  value is used, or a required one is missing)
 * @error ENOMEM    there was not enough memory available
 */
struct rbh_backend *
rbh_mongo_backend_new(const struct rbh_backend_plugin *self,
                      const struct rbh_uri *uri,
                      struct rbh_config *config,
                      bool read_only);

/**
 * Release the memory associated with the plugin
 */
void
rbh_mongo_plugin_destroy();


#endif
